<<<<<<< HEAD
#ifndef ITERATOR_H_INCLUDED
#define ITERATOR_H_INCLUDED

template < class par >
typename Drzewo < par >::iterator & Drzewo < par >::iterator::operator ++()
{
    if( wezel->prawy )
    {
        wezel = wezel->prawy;
        while( wezel->lewy )
             wezel = wezel->lewy;
        
    }
    else
    {
        Wezel * temp = wezel->rodzic;
        if( temp )
        {
            while( temp->prawy == wezel )
            {
                wezel = temp;
                temp = temp->rodzic;
                if( !temp )
                     break;
                
            }
            if( wezel->prawy != temp )
                 wezel = temp;
            
        }
        else wezel = temp;
        
    }
    
    return * this;
}


=======
#ifndef ITERATOR_H_INCLUDED
#define ITERATOR_H_INCLUDED

template < class par >
typename Drzewo < par >::iterator & Drzewo < par >::iterator::operator ++()
{
    if( wezel->prawy )
    {
        wezel = wezel->prawy;
        while( wezel->lewy )
             wezel = wezel->lewy;
        
    }
    else
    {
        Wezel * temp = wezel->rodzic;
        if( temp )
        {
            while( temp->prawy == wezel )
            {
                wezel = temp;
                temp = temp->rodzic;
                if( !temp )
                     break;
                
            }
            if( wezel->prawy != temp )
                 wezel = temp;
            
        }
        else wezel = temp;
        
    }
    
    return * this;
}


>>>>>>> 1b4740401eaac16e6b12e1a27fea5e2ab10aee6c
#endif // ITERATOR_H_INCLUDED